if(msg.startsWith("!결정석") || msg.startsWith("!결정")){
      bossname = msg.split(" ")[1];
      if(bossname == undefined){
        replier.reply("보스 이름을 입력해주십시오.\n\n!결정석 (보스이름) : 보스의 결정석 가격과 변동 현황을 보여줍니다.");
      }
      else{
        const gbM = require('getBoss');
        var bossind = gbM.getBoss(bossname);
        if(bossind == -1){
          replier.reply("입력한 값으로 검색되는 보스가 없습니다. 다시 확인해주세요.");
        }
        else{
          bname = gbM.getBossname2(bossind);
          var bnameIn = gbM.getBossname3(bossind);      
          binfo = "";
          if(bnameIn == "없음"){bHP = "결정석이 없는 보스입니다."}
          else{
            var bmapprev = new Map(); var bmapcur = new Map();
            getCrystal(bmapprev, bmapcur);
            var prevprice = parseInt(bmapprev.get(bnameIn));
            var curprice = parseInt(bmapcur.get(bnameIn));
            var pricediff = (curprice - prevprice);
            var pricepercent = pricediff / prevprice * 100;
            pricepercent = Number(pricepercent.toFixed(2));
            bHP = "현재 가격 : " + numberWithCommas(curprice) + "메소";
            if(pricediff >= 0){ binfo += "▲ ";}
            else{ binfo += "▼ ";}
            binfo += numberWithCommas(pricediff);
            binfo += " (" + pricepercent + "%)"; 
          }
          bimage = gbM.getBossimage(bossind);
          bimage2 = gbM.getBossimage2(bossind);
          bname2 = gbM.getBossname(bossind);
          Kakao.send(room,
            {
              "link_ver" : "4.0",
              "template_id" : 59498,
              "template_args" : {
                                    "bossimage" : bimage,
                                    "bossimage2" : bimage2,
                                    "bossname" : bname2,
                                    "bossHP" : bHP,
                                    "bossinfo" : binfo
                                }
            },
              "custom");      
        }
      }
    }

function getCrystal(tmap1, tmap2){
  CrysDay = org.jsoup.Jsoup.connect("http://wachan.me/boss_api2.php").data("date", 2).data("type", "day").ignoreHttpErrors(true).ignoreContentType(true).post().text();
  CrysWeek1 = org.jsoup.Jsoup.connect("http://wachan.me/boss_api2.php").data("date", 2).data("type", "week1").ignoreHttpErrors(true).ignoreContentType(true).post().text();
  CrysWeek2 = org.jsoup.Jsoup.connect("http://wachan.me/boss_api2.php").data("date", 2).data("type", "week2").ignoreHttpErrors(true).ignoreContentType(true).post().text();
  CrysMonth = org.jsoup.Jsoup.connect("http://wachan.me/boss_api2.php").data("date", 2).data("type", "month").ignoreHttpErrors(true).ignoreContentType(true).post().text();
  res = "";
  CrysDay = unescape(replaceA(CrysDay, "\\", "%"));
  CrysWeek1 = unescape(replaceA(CrysWeek1, "\\", "%"));
  CrysWeek2 = unescape(replaceA(CrysWeek2, "\\", "%"));
  CrysMonth = unescape(replaceA(CrysMonth, "\\", "%"));
  var Barr = []; var Carr = []; var Carr2 = [];
  getBname(Barr, CrysDay);    getBCrys1(Carr, CrysDay);    getBCrys2(Carr2, CrysDay);
  getBname(Barr, CrysWeek1);  getBCrys1(Carr, CrysWeek1);  getBCrys2(Carr2, CrysWeek1);
  getBname(Barr, CrysWeek2);  getBCrys1(Carr, CrysWeek2);  getBCrys2(Carr2, CrysWeek2);
  getBname(Barr, CrysMonth);  getBCrys1(Carr, CrysMonth);  getBCrys2(Carr2, CrysMonth);
  for(i = 0; i < Barr.length; ++i){
    tmap1.set(Barr[i], Carr[i]);
    tmap2.set(Barr[i], Carr2[i]);
  }
}
function getBname(arr, text){
  var temptxt = text.split("날짜")[1].split("\"],[")[0];
  var templen = temptxt.split("\",\"").length;
  for(i = 1; i < templen; ++i){
    var tempt = temptxt.split("\",\"")[i];
    arr.push(tempt);
  }  
}
function getBCrys1(arr, text){
  temptxt = text.split("\"],[\"")[1].split("],[\"")[0];
  templen = temptxt.split(",").length;
  for(i = 1; i < templen; ++i){
    tempt = temptxt.split(",")[i];
    arr.push(tempt);
  }  
}
function getBCrys2(arr, text){
  temptxt = text.split("\"],[\"")[1].split("],[\"")[1].split("]]")[0];
  templen = temptxt.split(",").length;
  for(i = 1; i < templen; ++i){
    tempt = temptxt.split(",")[i];
    arr.push(tempt);
  }  
}

function replaceA(strTemp, strValue1, strValue2){ 
  while(1){
      if( strTemp.indexOf(strValue1) != -1 )
          strTemp = strTemp.replace(strValue1, strValue2).replace("Easy", "이지").replace("Normal", "노멀").replace("Hard", "하드").replace("Chaos", "카오스");
      else
          break;
  }
  return strTemp;
}
